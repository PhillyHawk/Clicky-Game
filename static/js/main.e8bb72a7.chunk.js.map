{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/index.js","components/Score/Score.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","id","onClick","shuffleScoreCard","Wrapper","children","Score","total","status","Title","App","state","friends","clickedFriendIds","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mnEAUeA,G,MAPI,SAAAC,GAAK,OACtB,yBAAKC,UAAU,4BACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,GAAIN,EAAMM,GAClDC,QAAS,kBAAMP,EAAMQ,iBAAiBR,EAAMM,KAAKL,UAAU,oB,MCChDQ,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCM1BC,G,MAPD,SAAAX,GAAK,OACjB,yBAAKC,UAAU,aACb,wBAAIA,UAAY,SAAhB,eAAqCD,EAAMY,OAC3C,wBAAIX,UAAU,UAAUD,EAAMa,W,aCanBC,MAhBf,WACE,OACE,6BACE,yBAAKb,UAAU,YAEf,yBAAKA,UAAU,aACb,qDACA,yCACa,2CADb,gDACkF,2CADlF,uBCyDOc,G,iNAzDbC,MAAQ,CACNC,UACAC,iBAAkB,GAClBC,MAAO,EACPC,KAAM,GACNP,OAAQ,I,EAGVL,iBAAmB,SAAAF,GACjB,IAAIY,EAAmB,EAAKF,MAAME,iBAElC,GAAGA,EAAiBG,SAASf,GAC3B,EAAKgB,SAAS,CAAEJ,iBAAkB,GAAIC,MAAO,EAAGN,OAAQ,kCAD1D,CAME,GAFAK,EAAiBK,KAAKjB,GAES,KAA5BY,EAAiBM,OAGlB,OAFA,EAAKF,SAAS,CAACH,MAAO,GAAIN,OAAQ,WAAYK,iBAAkB,UAChEO,QAAQC,IAAI,WAGb,EAAKJ,SAAS,CAAEL,UAASC,mBAAkBC,MAAOD,EAAiBM,OAAQX,OAAQ,MAEnF,IAAK,IAAIc,EAAIV,EAAQO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC3C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADG,EAEhB,CAACV,EAAQW,GAAIX,EAAQU,IAA/CV,EAAQU,GAFkC,KAE9BV,EAAQW,GAFsB,Q,wEAOxC,IAAD,OACP,OACE,yBAAK3B,UAAU,aACf,yBAAKA,UAAU,OACd,kBAAC,EAAD,MACC,kBAAC,EAAD,CAAOW,MAAOoB,KAAKhB,MAAMG,MACjBC,KAAM,GACNP,OAAQmB,KAAKhB,MAAMH,SAE3B,kBAAC,EAAD,KACGmB,KAAKhB,MAAMC,QAAQgB,IAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACA1B,iBAAkB,EAAKA,iBACvBF,GAAI4B,EAAO5B,GACX6B,IAAKD,EAAO5B,GACZD,MAAO6B,EAAO7B,iB,GAhDR+B,c,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e8bb72a7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card img-container hover\">\n    <img alt={props.name} src={props.image} id={props.id}\n    onClick={() => props.shuffleScoreCard(props.id)} className=\"shuffleScore\"/>\n  </div>\n);\n \nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./Score.css\";\r\n\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className = \"score\">Your Score: {props.total}</h3>\r\n    <h3 className=\"status\">{props.status}</h3>\r\n    </div>\r\n);\r\n\r\nexport default Score;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title() {\n  return (\n    <div>\n      <nav className=\"navbar \">\n      </nav>\n      <div className=\"jumbotron\">\n        <header>Play Clicky Game!</header>\n        <p>\n          Click on a <strong>Pee-Wee</strong> to earn points, but don't click on the same <strong>Pee-Wee</strong> more than once! \n        </p>\n      </div>\n      </div>\n  );\n}\n\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score/Score\";\nimport friends from \"./friends.json\";\nimport Title from \"./components/Title\"\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedFriendIds: [],\n    score: 0,\n    goal: 12,\n    status: \"\"\n  };\n\n  shuffleScoreCard = id => {\n    let clickedFriendIds = this.state.clickedFriendIds;\n\n    if(clickedFriendIds.includes(id)){\n      this.setState({ clickedFriendIds: [], score: 0, status: \"Nope! Click to try again!\"});\n      return;\n    }else{\n      clickedFriendIds.push(id)\n\n      if(clickedFriendIds.length === 12){\n        this.setState({score: 12, status: \"You Won!\", clickedFriendIds: []});\n        console.log('You Win');\n        return;\n      }\n       this.setState({ friends, clickedFriendIds, score: clickedFriendIds.length, status: \" \" });\n\n       for (let i = friends.length - 1; i > 0; i--) {\n         let j = Math.floor(Math.random() * (i + 1));\n         [friends[i], friends[j]] = [friends[j], friends[i]];\n       }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"App\">\n       <Title />\n        <Score total={this.state.score}\n                goal={12}\n                status={this.state.status}\n                />\n        <Wrapper>\n          {this.state.friends.map(friend => (\n            <FriendCard\n            shuffleScoreCard={this.shuffleScoreCard}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            />\n\n          ))}\n        </Wrapper>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}